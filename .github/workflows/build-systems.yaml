name: Nix Flake actions

on:
  workflow_dispatch: {}
  pull_request:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v24
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          nix flake show --json | jq '.nixosConfigurations | to_entries | map({"name": .key})'
          echo matrix="{\"include\": " $(nix flake show --json | jq '.nixosConfigurations | to_entries | map({"name": .key})') >> "$GITHUB_OUTPUT" "}"
          cat $GITHUB_OUTPUT

  nix-build:
    needs: nix-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v1
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
      - name: Build
        run: |
          echo "Free space:"
          df -h
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v24
      - uses: cachix/cachix-action@v13
        with:
          name: vdemeester
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build -L ".#nixosConfigurations.${{ matrix.name }}.config.system.build.toplevel"
